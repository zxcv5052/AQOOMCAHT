const swaggerJsdoc = require('swagger-jsdoc');
const swaggerUi = require('swagger-ui-express');
const options = {
    swaggerDefinition: {
        info: {
            title: 'AQOOM API',
            version: '1.0.0',
            description: 'AQOOM Web Ver API with autogenerated swagger doc',
        },
        basePath: '/',
        components: {
            res: {
                NoContent:{
                    description: '없는 값.',
                    schema: {
                        $ref: '#/components/errorResult/Error'
                    }
                },
                BadRequest: {
                    description: '잘못된 요청.',
                    schema: {
                        $ref: '#/components/errorResult/Error'
                    }
                },
                Forbidden: {
                    description: '권한이 없슴.',
                    schema: {
                        $ref: '#/components/errorResult/Error'
                    }
                },
                NotFound: {
                    description: '없는 리소스 요청.',
                    schema: {
                        $ref: '#/components/errorResult/Error'
                    }
                }
            },
            errorResult: {
                Error: {
                    type: 'object',
                    properties: {
                        errMsg: {
                            type: 'string',
                            description: '에러 메시지 전달.'
                        }
                    }
                }
            }
        },
        definitions:  // 모델 정의
            {
                'chat': {
                    type: 'object',
                    properties: {
                        chat_id: {
                            type: 'integer'
                        },
                        user_id:{
                            type: 'integer'
                        },
                        group_name:{
                            type: 'string'
                        },
                        restrict_type:{
                            type: 'enum'
                        },
                        restrict_limit:{
                            type: 'integer',
                            defaultValue: 0
                        },
                        restrict_date:{
                            type: 'string'
                        },
                        anti_image:{
                            type: 'boolean',
                            defaultValue: false
                        },
                        anti_url:{
                            type: 'boolean',
                            defaultValue: false
                        },
                        anti_forward:{
                            type: 'boolean',
                            defaultValue: false
                        },
                        anti_join_message:{
                            type: 'boolean',
                            defaultValue: false
                        },
                        anti_left_message:{
                            type: 'boolean',
                            defaultValue: false
                        },
                        anti_longname:{
                            type: 'boolean',
                            defaultValue: false
                        },
                        anti_flood:{
                            type: 'boolean',
                            defaultValue: false
                        },
                        anti_command:{
                            type: 'boolean',
                            defaultValue: false
                        },
                        createdAt: {
                            allowNull: false,
                            type: 'boolean',
                        },
                        updatedAt: {
                            allowNull: false,
                            type: 'string'
                            },
                        is_active:{
                            type: 'string',
                            defaultValue: true
                        }
                    }
                },
                chat_announce:{
                    type: 'object',
                    properties: {
                        announce_seq : {
                            type: 'integer'
                        },
                        announce_content:{
                            type: 'string'
                        },
                        announce_type: {
                            type: 'integer'
                        },
                        scheduler_id:{
                            type: 'integer'
                        },
                        scheduler_month:{
                            type: 'integer'
                        },
                        scheduler_dayofmonth:{
                            type: 'integer'
                        },
                        scheduler_dayofweek:{
                            type: 'integer'
                        },
                        scheduler_hour:{
                            type: 'integer'
                        },
                        scheduler_min:{
                            type: 'integer'
                        },
                        button:{
                            type: 'string'
                        },
                        chat_id:{
                            type:'integer'
                        }
                    }
                },
                'chat_blacklist': {
                    type: 'object',
                    properties: {
                        blacklist_seq : {
                            type: 'integer'
                        },
                        word:{
                            type: 'string'
                        },
                        is_active: {
                            type: 'boolean'
                        },
                        chat_id:{
                            type: 'integer'
                        }
                    }
                },
                'chat_bot_activities': {
                    type: 'object',
                    properties: {
                        seq : {
                            type: 'integer'
                        },
                        action:{
                            type: 'string'
                        },
                        createdAt: {
                            type: 'string'
                        },
                        updatedAt:{
                            type: 'string'
                        },
                        chat_id:{
                            type: 'integer'
                        }
                    }
                },
                'chat_faq': {
                    type: 'object',
                    properties: {
                        faq_seq : {
                            type: 'integer'
                        },
                        content:{
                            type: 'string'
                        },
                        response_content_text: {
                            type:'string'
                        },
                        response_content_image:{
                            type:'string'
                        },
                        response_type:{
                            type: 'integer'
                        },
                        enabled_condition:{
                            type: 'boolean'
                        },
                        button:{
                            type:'string'
                        },
                        createdAt:{
                            type: 'string'
                        },
                        updatedAt:{
                            type: 'string'
                        },
                        chat_id:{
                            type: 'integer'
                        }
                    }
                },
                'chat_greeting': {
                    type: 'object',
                    properties: {
                        greeting_seq : {
                            type: 'integer'
                        },
                        greeting_text:{
                            type: 'string'
                        },
                        greeting_image:{
                            type:'string'
                        },
                        response_type:{
                            type: 'integer'
                        },
                        is_active:{
                            type: 'boolean'
                        },
                        button:{
                            type:'string'
                        },
                        createdAt:{
                            type: 'string'
                        },
                        updatedAt:{
                            type: 'string'
                        },
                        chat_id:{
                            type: 'integer'
                        }
                    }
                },
                'chat_timezone': {
                    type: 'object',
                    properties: {
                        timezone_seq : {
                            type: 'integer'
                        },
                        timezone:{
                            type: 'string'
                        },
                        offset:{
                            type:'integer'
                        },
                        tz_pos:{
                            type: 'integer'
                        },
                        chat_id:{
                            type: 'integer'
                        }
                    }
                },
                'message': {
                    type: 'object',
                    properties: {
                        message_id : {
                            type: 'integer'
                        },
                        chat_id:{
                            type: 'integer'
                        },
                        user_id:{
                            type: 'integer'
                        },
                        media_group_id:{
                            type: 'integer'
                        },
                        message_type:{
                            type: 'string'
                        },
                        message:{
                            type:'string'
                        },
                        entity:{
                            type: 'string'
                        },
                        reply_to_message_id:{
                            type: 'integer'
                        },
                        createdAt:{
                            type: 'string'
                        }
                    }
                },
                'user': {
                    type: 'object',
                    properties: {
                        user_id : {
                            type: 'integer'
                        },
                        first_name:{
                            type: 'string'
                        },
                        last_name:{
                            type: 'string'
                        },
                        is_bot:{
                            type: 'boolean'
                        },
                        user_name:{
                            type: 'string'
                        },
                        warning_pt:{
                            type:'integer'
                        },
                        createdAt:{
                            type: 'string'
                        },
                        updatedAt:{
                            type: 'string'
                        }
                    }
                },
                'user_chat_personal': {
                    type: 'object',
                    properties: {
                        warning_pt:{
                            type: 'integer'
                        },
                        restriction_date:{
                            type: 'string'
                        },
                        status:{
                            type: 'string'
                        },
                        user_id:{
                            type: 'integer'
                        },
                        chat_id:{
                            type: 'integer'
                        }
                    }
                },
                'user_chat_whitelist':{
                    type: 'object',
                    properties: {
                        seq : {
                            type: 'integer'
                        },
                        user_id:{
                            type: 'integer'
                        },
                        chat_id:{
                            type: 'integer'
                        }
                    }
                }
            }
    },
    // List of files to be processes. You can also set globs './routes/*.js'
    apis: ['./routes/*.js'],
};

const specs = swaggerJsdoc(options);

module.exports = app=>{
    app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs))
}